spring:
  application:
    name: product-service

  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:mariadb://mariadb:3306/preorder}
    username: ${SPRING_DATASOURCE_USERNAME:taek}
    password: ${SPRING_DATASOURCE_PASSWORD:1234}
    driver-class-name: org.mariadb.jdbc.Driver
    hikari:
      maximum-pool-size: ${HIKARI_MAX_POOL_SIZE:100}
      minimum-idle: 10
      idle-timeout: 30000
      max-lifetime: 1800000
      connection-timeout: 30000

  data:
    redis:
      host: ${REDIS_HOST:redis}
      port: ${SPRING_DATA_REDIS_PORT:6379}
      lettuce:
        pool:
          max-active: 128
          max-idle: 32
          min-idle: 8
          time-between-eviction-runs: 60s

  jpa:
    open-in-view: false              # 컨트롤러 레이어 우발적 LAZY 접근 차단
    hibernate:
      ddl-auto: create
    show-sql: false
    properties:
      hibernate.default_batch_fetch_size: 100   # N+1 가드용 배치 로딩

  kafka:
    bootstrap-servers: ${SPRING_KAFKA_BOOTSTRAP_SERVERS:kafka:9092}
    listener:
      missing-topics-fatal: false
    producer:
      acks: all
      properties:
        enable.idempotence: true
        spring.json.add.type.headers: false
    consumer:
      properties:
        spring.json.use.type.headers: false

server:
  port: 8085
  tomcat:
    threads:
      max: 200
    accept-count: 1000
    connection-timeout: 10000

eureka:
  client:
    fetch-registry: true
    register-with-eureka: true
    registry-fetch-interval-seconds: 5
    service-url:
      defaultZone: http://discovery-service:8761/eureka
  instance:
    instance-id: ${spring.application.name}:${random.value}
    prefer-ip-address: true

jwt:
  secret: ${JWT_SECRET:Pr5aQ!9zdT7XgW2mXyCb$$Hr4LdS6kJvB}

email:
  auto-verify: ${EMAIL_AUTO_VERIFY:false}

kafka:
  consumer:
    command:
      concurrency: 6
    event:
      concurrency: 6

logging:
  level:
    root: WARN
    org.hibernate: WARN
    com.zaxxer.hikari: WARN
    com.netflix.discovery: WARN
    com.netflix.eureka: WARN
