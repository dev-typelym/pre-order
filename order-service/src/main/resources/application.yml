spring:
  application:
    name: order-service

  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:mariadb://mariadb:3306/preorder}
    username: ${SPRING_DATASOURCE_USERNAME:taek}
    password: ${SPRING_DATASOURCE_PASSWORD:1234}
    driver-class-name: org.mariadb.jdbc.Driver
    hikari:
      maximum-pool-size: ${HIKARI_MAX_POOL_SIZE:50}
      minimum-idle: 10
      idle-timeout: 30000
      max-lifetime: 1800000
      connection-timeout: 30000

  data:
    redis:
      host: ${REDIS_HOST:redis}
      port: 6379

  jpa:
    hibernate:
      ddl-auto: create
    show-sql: true

  kafka:
    bootstrap-servers: ${SPRING_KAFKA_BOOTSTRAP_SERVERS:kafka:9092}

server:
  port: 8084

jwt:
  secret: ${JWT_SECRET:Pr5aQ!9zdT7XgW2mXyCb$$Hr4LdS6kJvB}

eureka:
  client:
    fetch-registry: true
    register-with-eureka: true
    registry-fetch-interval-seconds: 5
    service-url:
      defaultZone: http://discovery-service:8761/eureka/
  instance:
    instance-id: ${spring.application.name}:${random.value}
    prefer-ip-address: true

email:
  auto-verify: ${EMAIL_AUTO_VERIFY:false}

feign:
  client:
    config:
      product-service:  # @FeignClient(name="product-service")와 동일해야 적용
        connectTimeout: 800
        readTimeout: 1200
        loggerLevel: none
        retryer: 'feign.Retryer$NeverRetry'   # 짧은 타임아웃 + 무재시도

logging:
  level:
    feign: INFO         # 운영에선 INFO 권장

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics

order:
  expiration:
    sweep-interval-ms: 10000
    batch-size: 300
    grace-seconds: 10
    max-rounds: 10

kafka:
  consumer:
    stock-result:
      concurrency: 6
