spring:
  application:
    name: auth-service

  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:mariadb://mariadb:3306/preorder}
    username: ${SPRING_DATASOURCE_USERNAME:taek}
    password: ${SPRING_DATASOURCE_PASSWORD:1234}
    driver-class-name: org.mariadb.jdbc.Driver
    hikari:
      maximum-pool-size: ${HIKARI_MAX_POOL_SIZE:40}   # Auth는 DB IO가 적음 — 40 권장(환경변수로 조정 가능)
      minimum-idle: 10
      idle-timeout: 30000
      max-lifetime: 1800000
      connection-timeout: 30000

  data:
    redis:
      host: ${REDIS_HOST:redis}
      port: ${SPRING_DATA_REDIS_PORT:6379}
      lettuce:
        pool:                 # Redis 커넥션 풀 튜닝(스파이크 흡수)
          max-active: 64
          max-idle: 16
          min-idle: 8
          time-between-eviction-runs: 60s

  jpa:
    hibernate:
      ddl-auto: create
    open-in-view: false        # 컨트롤러 레이어 LAZY 접근 차단
    show-sql: false            # 부하 테스트/운영에서 SQL 로그 OFF
    properties:
      hibernate.default_batch_fetch_size: 100  # N+1 가드(우발적 LAZY 접근시 배치 로딩)

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope:
              - profile
              - email
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            client-name: Google
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/v2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
            user-name-attribute: sub

jwt:
  secret: ${JWT_SECRET:Pr5aQ!9zdT7XgW2mXyCb$$Hr4LdS6kJvB}

server:
  port: 8081
  tomcat:                      # Auth는 동시성 낮음 — 톰캣 스레드도 적정치로
    threads:
      max: 150
    accept-count: 1000
    connection-timeout: 10000

eureka:
  client:
    fetch-registry: true
    register-with-eureka: true
    registry-fetch-interval-seconds: 5
    service-url:
      defaultZone: http://discovery-service:8761/eureka
  instance:
    instance-id: ${spring.application.name}:${random.value}
    prefer-ip-address: true

email:
  auto-verify: ${EMAIL_AUTO_VERIFY:false}

feign:
  client:
    config:
      member-service:
        connectTimeout: 1500    # 요청한 값 유지
        readTimeout: 3000       # 요청한 값 유지
        loggerLevel: basic
        retryer: feign.Retryer$NeverRetry

logging:
  level:
    root: WARN
    org.hibernate: WARN
    com.zaxxer.hikari: WARN
    org.springframework.web: WARN
    org.springframework.security: WARN
    org.springframework.cloud: WARN
