plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.5'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.app.preorder'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    //  Spring Boot 기본
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.apache.commons:commons-lang3:3.13.0'

    // Actuator / Prometheus
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    runtimeOnly   'io.micrometer:micrometer-registry-prometheus'

    // Cloud / Networking
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    implementation 'org.springframework.cloud:spring-cloud-starter-loadbalancer'

    //  DB Driver
    implementation 'org.mariadb.jdbc:mariadb-java-client'

    //  내부 공용 모듈
    implementation project(':common-lib')
    implementation project(':infra-lib')

    //  JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    runtimeOnly   'io.jsonwebtoken:jjwt-impl:0.11.2'
    runtimeOnly   'io.jsonwebtoken:jjwt-jackson:0.11.2'

    //  Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    //  Resilience4j (서킷브레이커 @CircuitBreaker)
    implementation 'io.github.resilience4j:resilience4j-spring-boot3'
    implementation 'io.github.resilience4j:resilience4j-circuitbreaker'

    //  AOP 프록시 (어노테이션 적용에 필요)
    implementation 'org.springframework.boot:spring-boot-starter-aop'

    //  테스트
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.named('bootJar') {
    bootJar ->
        bootJar.mainClass.set('com.app.preorder.authservice.AuthServiceApplication')
        bootJar.archiveFileName = 'app.jar'
}

tasks.named('jar') {
    enabled = false
}
