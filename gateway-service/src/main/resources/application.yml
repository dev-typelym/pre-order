server:
  port: 8087

spring:
  application:
    name: gateway-service

  data:
    redis:
      host: ${SPRING_DATA_REDIS_HOST:redis}
      port: ${SPRING_DATA_REDIS_PORT:6379}

  cloud:
    gateway:
      discovery:
        locator:
          enabled: false

      # ★ Gateway 자체 메트릭 활성화
      metrics:
        enabled: true

      httpclient:
        pool:
          type: FIXED
          maxConnections: 6000
          acquireTimeout: 2000
          maxIdleTime: 30s
          maxLifeTime: 300s
        connect-timeout: 2000
        response-timeout: 4s
        wiretap: false

      routes:
        # 0) 내부 API 차단
        - id: block-internal
          uri: no://op
          predicates:
            - Path=/api/internal/**
          filters:
            - name: SetStatus
              args: { status: 403 }

        # 1) Product — CircuitBreaker만
        - id: product
          uri: lb://product-service
          predicates:
            - Path=/api/products/**
          filters:
            - name: CircuitBreaker
              args:
                name: productCB
                fallbackUri: forward:/__fallback
                statusCodes: [500,502,503,504]

        # 2) Order — CircuitBreaker만
        - id: order
          uri: lb://order-service
          predicates:
            - Path=/api/orders/**
          filters:
            - name: CircuitBreaker
              args:
                name: orderCB
                fallbackUri: forward:/__fallback
                statusCodes: [500,502,503,504]

        # 3) Auth — QoS 제거
        - id: auth
          uri: lb://auth-service
          predicates:
            - Path=/api/auth/**

        # 4) Member — QoS 제거
        - id: member
          uri: lb://member-service
          predicates:
            - Path=/api/members/**

        # 5) Cart — QoS 제거
        - id: cart
          uri: lb://cart-service
          predicates:
            - Path=/api/carts/**

    loadbalancer:
      health-check:
        enabled: true
        interval: 5s

eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE:http://discovery-service:8761/eureka/}
  instance:
    prefer-ip-address: true

# ★ Actuator/Prometheus 노출
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
  metrics:
    tags:
      application: ${spring.application.name}

resilience4j:
  circuitbreaker:
    instances:
      productCB:
        slidingWindowType: COUNT_BASED
        slidingWindowSize: 50
        minimumNumberOfCalls: 20
        failureRateThreshold: 50
        slowCallRateThreshold: 50
        slowCallDurationThreshold: 1s
        waitDurationInOpenState: 10s
        permittedNumberOfCallsInHalfOpenState: 5
        recordExceptions:
          - java.io.IOException
          - java.util.concurrent.TimeoutException
          - io.netty.channel.ConnectTimeoutException
          - reactor.netty.http.client.PrematureCloseException
          - org.springframework.cloud.gateway.support.TimeoutException
          - org.springframework.web.reactive.function.client.WebClientRequestException
          - org.springframework.web.reactive.function.client.WebClientResponseException
      orderCB:
        slidingWindowType: COUNT_BASED
        slidingWindowSize: 50
        minimumNumberOfCalls: 20
        failureRateThreshold: 50
        slowCallRateThreshold: 50
        slowCallDurationThreshold: 1s
        waitDurationInOpenState: 10s
        permittedNumberOfCallsInHalfOpenState: 5
        recordExceptions:
          - java.io.IOException
          - java.util.concurrent.TimeoutException
          - io.netty.channel.ConnectTimeoutException
          - reactor.netty.http.client.PrematureCloseException
          - org.springframework.cloud.gateway.support.TimeoutException
          - org.springframework.web.reactive.function.client.WebClientRequestException
          - org.springframework.web.reactive.function.client.WebClientResponseException

  timelimiter:
    instances:
      productCB:
        timeoutDuration: 4s
      orderCB:
        timeoutDuration: 4s

logging:
  level:
    root: WARN
    reactor.netty: WARN
    org.springframework.cloud.gateway: INFO
