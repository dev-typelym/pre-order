server:
  port: 8086

spring:
  application:
    name: gateway-service

  cloud:
    gateway:
      # 동적 라우팅 비활성화: 의도치 않은 경로 노출 방지
      discovery:
        locator:
          enabled: false

      httpclient:
        connect-timeout: 2000
        response-timeout: 4s

      routes:
        # 0) 내부 API 전면 차단 (가장 먼저 매칭되도록 최상단)
        - id: block-internal
          uri: no://op
          predicates:
            - Path=/api/internal/**
          filters:
            - name: SetStatus
              args:
                status: 403

        # 1) Product 외부 API
        - id: product
          uri: lb://product-service
          predicates:
            - Path=/api/products/**
          filters:
            - name: CircuitBreaker
              args:
                name: productCB
                fallbackUri: forward:/__fallback
            - name: RequestRateLimiter
              args:
                key-resolver: "#{@userKeyResolver}"
                redis-rate-limiter.replenishRate: 300
                redis-rate-limiter.burstCapacity: 600
            - name: Retry
              args:
                retries: 1
                methods: GET
                statuses: BAD_GATEWAY,SERVICE_UNAVAILABLE,GATEWAY_TIMEOUT

        # 2) Order 외부 API
        - id: order
          uri: lb://order-service
          predicates:
            - Path=/api/orders/**
          filters:
            - name: CircuitBreaker
              args:
                name: orderCB
                fallbackUri: forward:/__fallback
            - name: RequestRateLimiter
              args:
                key-resolver: "#{@userKeyResolver}"
                redis-rate-limiter.replenishRate: 200
                redis-rate-limiter.burstCapacity: 400

  data:
    redis:
      # 컨테이너에선 ENV로 덮여쓰고, 로컬 실행시에도 안전한 기본값 제공
      host: ${SPRING_DATA_REDIS_HOST:redis}
      port: ${SPRING_DATA_REDIS_PORT:6379}

eureka:
  client:
    service-url:
      # 컨테이너 기본값(ENV로도 덮어쓰기 가능)
      defaultZone: ${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE:http://discovery-service:8761/eureka/}
  instance:
    prefer-ip-address: true

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics

resilience4j:
  circuitbreaker:
    instances:
      productCB:
        slidingWindowType: COUNT_BASED
        slidingWindowSize: 20
        minimumNumberOfCalls: 10
        failureRateThreshold: 50
        waitDurationInOpenState: 10s
        permittedNumberOfCallsInHalfOpenState: 3
        recordExceptions:
          - java.io.IOException
          - org.springframework.web.reactive.function.client.WebClientRequestException
          - org.springframework.web.reactive.function.client.WebClientResponseException
      orderCB:
        slidingWindowType: COUNT_BASED
        slidingWindowSize: 20
        minimumNumberOfCalls: 10
        failureRateThreshold: 50
        waitDurationInOpenState: 10s
        permittedNumberOfCallsInHalfOpenState: 3
        recordExceptions:
          - java.io.IOException
          - org.springframework.web.reactive.function.client.WebClientRequestException
          - org.springframework.web.reactive.function.client.WebClientResponseException

  timelimiter:
    instances:
      productCB:
        timeoutDuration: 4s
      orderCB:
        timeoutDuration: 4s
